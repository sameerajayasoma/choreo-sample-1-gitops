name: Ballerina Build and Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          repository: "sameerajayasoma/choreo-sample-1"
      - name: Get the latest commit SHA of another repository
        id: get-sha
        run: echo "OTHER_REPO_SHA=$(git -C another-repo rev-parse HEAD)" >> $GITHUB_ENV

      - name: Test package
        uses: ballerina-platform/ballerina-action@2201.8.6
        with:
          args: test
      - name: test package
        uses: ballerina-platform/ballerina-action@2201.8.6
        with:
          args: build

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: sameerajayasoma/myapp:${{ github.sha }}

      - name: Update Builder with image details
        if: success()
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://e69b-172-56-107-161.ngrok-free.app/builder/buildstatus"
          method: POST
          customHeaders: '{"Content-Type": "application/json"}'
          data: |
            { 
              "status": "success",
              "image" : {
                  "registry": "docker.io",
                  "repository": "sameerajayasoma/myapp",
                  "tag": "${{ env.OTHER_REPO_SHA }}"
              }
            }
      - name: Update Builder with failure status
        if: failure()
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://e69b-172-56-107-161.ngrok-free.app/builder/buildstatus"
          method: POST
          customHeaders: '{"Content-Type": "application/json"}'
          data: |
            { 
               "status": "failure"
            }
